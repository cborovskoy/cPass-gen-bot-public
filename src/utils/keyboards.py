from aiogram.types import InlineKeyboardMarkup, InlineKeyboardButton
from aiogram.utils.keyboard import InlineKeyboardBuilder

from src.models.pass_config import PasswordConfig


def get_checkbox(value: bool) -> str:
    return '‚òëÔ∏è' if value else 'üî≤Ô∏è'


def get_kb_for_main_menu(pass_config: PasswordConfig) -> InlineKeyboardMarkup:
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text=' üîÑ –ù–æ–≤—ã–µ', callback_data='new'),
                InlineKeyboardButton(text=' üíæ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å', callback_data='save'))

    builder.row(*[InlineKeyboardButton(text=f'¬∑{t} –°–∏–º–≤¬∑' if pass_config.len_pass == t else f'{t} –°–∏–º–≤',
                                       callback_data=f'len_{t}') for t in [8, 12, 16, 24]])

    builder.row(InlineKeyboardButton(text=f'{get_checkbox(pass_config.get_use_uppercase())} –ü—Ä–æ–ø–∏—Å–Ω—ã–µ',
                                     callback_data='upper'),
                InlineKeyboardButton(text=f'{get_checkbox(pass_config.get_use_low())} –°—Ç—Ä–æ—á–Ω—ã–µ',
                                     callback_data='lower'))

    builder.row(InlineKeyboardButton(text=f'{get_checkbox(pass_config.get_use_nums())} –¶–∏—Ñ—Ä—ã',
                                     callback_data='num'),
                InlineKeyboardButton(text=f'{get_checkbox(pass_config.get_use_other_symb())} –°–ø–µ—Ü—Å–∏–º–≤–æ–ª—ã',
                                     callback_data='other_symb'))

    return builder.as_markup()
